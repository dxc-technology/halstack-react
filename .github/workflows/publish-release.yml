name: Publish Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_SANDBOX }}
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Install lib dependencies
        run: cd lib && npm install --omit=dev

      - name: Install lib babel dependency
        run: cd lib && npm install --D @babel/core

      - name: Build library
        run: cd lib && npm run build

      - name: Install website dependencies
        run: cd website && npm i

      - name: Test library
        run: cd lib && npm run test

      - name: Test library accessibility
        run: cd lib && npm run test:accessibility

      - name: Publish RELEASE to npm
        run: |
          sed -i "s#\"version\": \"0.0.0\"#\"version\": \"${TAG_NAME}\"#" ./dist/package.json
          cd dist
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
          TAG_NAME: ${{ github.event.release.tag_name }}

      - name: Install scripts dependencies
        run: cd scripts && npm install

      - name: Move RELEASE website to S3
        run: node scripts/release-website.js $TAG_NAME
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}

      - name: Execute script version
        run: node scripts/create-version.js $TAG_NAME

      - name: Deploy version to S3 Bucket
        run: |
          aws s3 rm s3://design.system.components.catalog/guidelines/version --recursive
          aws s3 cp ./catalog/version/ s3://design.system.components.catalog/guidelines/version --recursive
